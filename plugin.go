package main

import (
	"bytes"
	"encoding/json"
	"fmt"
	"net/http"
)

type (
	Config struct {
		Url     string
		Token   string
		Message string
	}

	Plugin struct {
		Config Config
	}
)

func (p Plugin) Exec() error {

	// Generated by curl-to-Go: https://mholt.github.io/curl-to-go

	type Payload struct {
		Text string `json:"text"`
	}

	data := Payload{
		p.Config.Message,
	}
	payloadBytes, err := json.Marshal(data)
	if err != nil {
		// handle err
	}
	body := bytes.NewReader(payloadBytes)

	url := "http://" + p.Config.Url + "/hooks/" + p.Config.Token

	req, err := http.NewRequest("POST", url, body)
	if err != nil {
		// handle err
	}
	req.Header.Set("Content-Type", "application/json")

	resp, err := http.DefaultClient.Do(req)
	if err != nil {
		// handle err
		return err
	}
	fmt.Println("Response is", resp.StatusCode)
	defer resp.Body.Close()

	return nil
}
